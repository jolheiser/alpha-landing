heading_md: |
  Software Construction **Demystified**
subheading_md: |
  CodeCrafters is a set of **advanced** programming challenges where you build programming tools like Git, Redis and Docker from scratch.

  Tickle your fancy? 

learn_redis_internals_md: |
  For many of us, how Redis works under the hood is a mystery.

  - How do Redis clients communicate with a Redis server? 

  - How does Redis serve thousands of clients with a _single_ thread?

  - What exactly is this "event loop" that Redis uses? 

  If one really wanted to understand this tangled web of TCP servers, [events
  loops](https://en.wikipedia.org/wiki/Event_loop) and the [Redis
  protocol](https://redis.io/topics/protocol), these are some of the resources
  they'd probably look at:

  - [Official Redis Internals docs](https://redis.io/topics/internals) by
    Salvatore Sanfilippo

  - [Write your own Miniature Redis with
    Python](https://charlesleifer.com/blog/building-a-simple-redis-server-with-python/)
    by Charles Leifer

  - [Learn by building Redis with
    Ruby](https://www.pluralsight.com/courses/learn-by-building-redis-with-ruby)
    by Xavier Shay

  - [Build your own Redis](https://rohitpaulk.com/articles/redis-0) by Paul
    Kuruvilla

  As the author of the last item mentioned above and a reader of all other
  similar resources, I know that these aren't easy to follow. They're
  often theory-heavy with no code examples, or 2000 word+ series that can get
  hard to keep up with.

  Here's the part where I offer you a better solution. 

  The CodeCrafters' [Build your own Redis challenge](/challenges/redis) is a
  hands-on challenge where you'll learn Redis internals by _building_ a toy
  Redis implementation. The application you'll build will speak the Redis
  protocol, and will be capable of serving basic commands like PING, ECHO, SET
  and GET.

  <img class="course-preview" src="/images/redis_challenge_preview.png">

  You'll proceed stage by stage, starting with a basic TCP server and building
  up to a minimal-featured Redis implementation that can speak the Redis
  protocol. You'll submit code via a git push, and we'll stream test results
  directly to your terminal.

  You'll also get to chat & compete with like-minded folks in the process. (We
  run 1-week long sessions, attempt at your own pace)

  <img class="course-preview" src="/images/chat_preview.png" style="max-width: 450px;">

  Sounds like your jam? Signup below for early access!

early_access_md: |
  Hi there, I'm [Paul](https://rohitpaulk.com). 
  
  [CodeCrafters](https://codecrafters.io) is currently under active development,
  but we've got the core challenge experience ready and are looking for early users
  who are brave enough to try it out.

  Here're the challenges we have lined up for testing:

    - [Build your own Redis](/challenges/redis)
    - [Build your own Docker](/challenges/docker)
    - [Build your own Git](/challenges/git) (coming soon)

  The kind of person we're looking for: 

  - Is interested in [Build Your Own
    X](https://github.com/danistefanovic/build-your-own-x) tutorials
  - Is an experienced programmer, familiar with either Python, Ruby or Go (or
    would like to use one of them)
  - Despises traditional algorithmic coding questions
  - Can spend 1-2 hours a week trying out challenges

  What you'll get:

  - Early access to challenges
  - A chance to vote on which challenges we'll work on next
  - Updates on CodeCrafters development activity
  - A variety of CodeCrafters badges, which'll be featured on your profile page
    once we launch
  - A bunch of CodeCrafters swag (T-shirts, stickers and more)


  Sounds like your cup of tea?

  We'd love to have you on-board.


faqs:
  - slug: when-will-i-receive-my-early-access-invite
    question: When will I receive my early access invite?
    content_md: |
      We're intentionally sending out invites slowly, so that we can work on
      feedback early before the next invites hit. The maximum delay we expect
      here is 1 month, not more.

      If a friend of yours received an invite earlier than you did and you want
      to take part in early access trials with them, you can [write to
      us](mailto:hello@codecrafters.io) and we'll fast-track your invite.

  - slug: what-is-an-early-access-trial
    question: What is an early access trial?
    content_md: |
      In early access trials, groups of 4-5 people attempt an upcoming challenge
      over a period of 2 weeks. We schedule these on our Discord server, which
      you'll gain access to once you get an early access invite.

      We use these trials to gain early feedback and iterate on challenges.

      When CodeCrafters launches, no participation data from these trials will
      be retained - we'll start from a clean slate.

  - slug: where-is-my-swag
    question: Where is my swag? 
    content_md: |
      If you’ve participated in an early access trial and completed the
      challenge, you’ll receive a message on Discord asking for your mailing
      address and T-shirt size preference. If this hasn’t happened, please [let
      us know](mailto:hello@codecrafters.io).

  - slug: what-all-languages-can-i-use
    question: What all languages can I use? 
    content_md: |
      As of now:
        
      - [Redis challenge](/challenges/redis): Python, Go, PHP.

      - [Docker challenge](/challenges/docker): Go.

      We're always looking to add support for more languages. If you're part of
      [Early Access](/early-access), let us know what language you'd like added
      on our Discord server - and we'll try our best to support it in the next
      early access trial!
